// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gokv.proto

package kv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represent a key
type Key struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ddeeba323e93b9f, []int{0}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// Represent a value
type Value struct {
	Value                map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ddeeba323e93b9f, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetValue() map[string]string {
	if m != nil {
		return m.Value
	}
	return nil
}

// Represents key-value pair
type KeyValue struct {
	Key                  *Key     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Value   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ddeeba323e93b9f, []int{2}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Represent response message with no key-value pair
type Response struct {
	Message              string    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Kv                   *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ddeeba323e93b9f, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetKv() *KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

func init() {
	proto.RegisterType((*Key)(nil), "kv.Key")
	proto.RegisterType((*Value)(nil), "kv.Value")
	proto.RegisterMapType((map[string]string)(nil), "kv.Value.ValueEntry")
	proto.RegisterType((*KeyValue)(nil), "kv.KeyValue")
	proto.RegisterType((*Response)(nil), "kv.Response")
}

func init() { proto.RegisterFile("gokv.proto", fileDescriptor_5ddeeba323e93b9f) }

var fileDescriptor_5ddeeba323e93b9f = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0xe7, 0xba, 0xed, 0xd5, 0x83, 0x84, 0x89, 0x75, 0x08, 0xce, 0x1c, 0x64, 0x78,
	0xe8, 0xa1, 0x5e, 0x86, 0xc7, 0x82, 0x8a, 0xf4, 0x32, 0x2a, 0x7a, 0xaf, 0xfa, 0xd8, 0x20, 0xb6,
	0x29, 0x4d, 0x16, 0xc8, 0xff, 0xe2, 0x1f, 0x2b, 0x49, 0x5a, 0xa7, 0xa8, 0x78, 0x09, 0xef, 0xbd,
	0x7c, 0xf9, 0x7d, 0x5f, 0x78, 0x00, 0x6b, 0xc1, 0x75, 0xd2, 0xb4, 0x42, 0x09, 0x1a, 0x70, 0xcd,
	0x8e, 0x61, 0x90, 0xa3, 0xa1, 0x87, 0x30, 0xe0, 0x68, 0x62, 0x32, 0x27, 0x8b, 0x49, 0x61, 0x4b,
	0x56, 0xc1, 0xf0, 0xa9, 0x7c, 0xdb, 0x22, 0xbd, 0x84, 0xa1, 0xb6, 0x45, 0x4c, 0xe6, 0x83, 0x45,
	0x94, 0x4e, 0x13, 0xae, 0x13, 0x77, 0xe3, 0xcf, 0x9b, 0x5a, 0xb5, 0xa6, 0xf0, 0x92, 0xd9, 0x12,
	0x60, 0x37, 0xfc, 0x09, 0xa5, 0xd3, 0x9e, 0x15, 0xb8, 0x99, 0x6f, 0xae, 0x83, 0x25, 0x61, 0xb7,
	0x30, 0xce, 0xd1, 0x78, 0xc7, 0x93, 0xdd, 0xbb, 0x28, 0x1d, 0x59, 0xbf, 0x1c, 0x8d, 0x07, 0x9c,
	0x7d, 0x05, 0x44, 0xe9, 0xe4, 0x33, 0x4c, 0xc7, 0x62, 0x19, 0x8c, 0x0b, 0x94, 0x8d, 0xa8, 0x25,
	0xd2, 0x18, 0x46, 0x15, 0x4a, 0x59, 0xae, 0xb1, 0xcb, 0xd0, 0xb7, 0xf4, 0x14, 0x02, 0xae, 0x3b,
	0xc6, 0x41, 0x67, 0xe0, 0x31, 0x01, 0xd7, 0xe9, 0x3b, 0x81, 0xfd, 0x3b, 0x91, 0x6b, 0x7a, 0x01,
	0xe1, 0x7d, 0x2d, 0xb1, 0x55, 0xf4, 0x9b, 0x68, 0xe6, 0xba, 0xde, 0x86, 0xed, 0x59, 0xdd, 0x63,
	0xf3, 0x5a, 0x2a, 0xfc, 0x47, 0x77, 0x0e, 0xe1, 0x03, 0x96, 0xed, 0xcb, 0x86, 0xf6, 0xbf, 0xfa,
	0x4d, 0x52, 0x60, 0x25, 0x34, 0xfe, 0x29, 0xc9, 0x8e, 0x20, 0x52, 0xab, 0xcd, 0xb6, 0xc2, 0xc4,
	0xee, 0x32, 0x73, 0x51, 0x57, 0xe4, 0x39, 0x74, 0x4b, 0xbd, 0xfa, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x12, 0x0a, 0x32, 0xe2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoKvClient is the client API for GoKv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoKvClient interface {
	// Insert key-value pairs
	Insert(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Response, error)
	// Update key-value pairs
	Update(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Response, error)
	// Search for value with key
	Search(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Response, error)
	// Remove a key-value pair with a key
	Remove(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Response, error)
}

type goKvClient struct {
	cc grpc.ClientConnInterface
}

func NewGoKvClient(cc grpc.ClientConnInterface) GoKvClient {
	return &goKvClient{cc}
}

func (c *goKvClient) Insert(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/kv.GoKv/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goKvClient) Update(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/kv.GoKv/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goKvClient) Search(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/kv.GoKv/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goKvClient) Remove(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/kv.GoKv/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoKvServer is the server API for GoKv service.
type GoKvServer interface {
	// Insert key-value pairs
	Insert(context.Context, *KeyValue) (*Response, error)
	// Update key-value pairs
	Update(context.Context, *KeyValue) (*Response, error)
	// Search for value with key
	Search(context.Context, *Key) (*Response, error)
	// Remove a key-value pair with a key
	Remove(context.Context, *Key) (*Response, error)
}

// UnimplementedGoKvServer can be embedded to have forward compatible implementations.
type UnimplementedGoKvServer struct {
}

func (*UnimplementedGoKvServer) Insert(ctx context.Context, req *KeyValue) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedGoKvServer) Update(ctx context.Context, req *KeyValue) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedGoKvServer) Search(ctx context.Context, req *Key) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedGoKvServer) Remove(ctx context.Context, req *Key) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterGoKvServer(s *grpc.Server, srv GoKvServer) {
	s.RegisterService(&_GoKv_serviceDesc, srv)
}

func _GoKv_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoKvServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.GoKv/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoKvServer).Insert(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoKv_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoKvServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.GoKv/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoKvServer).Update(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoKv_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoKvServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.GoKv/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoKvServer).Search(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoKv_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoKvServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.GoKv/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoKvServer).Remove(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoKv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kv.GoKv",
	HandlerType: (*GoKvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _GoKv_Insert_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _GoKv_Update_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _GoKv_Search_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _GoKv_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gokv.proto",
}
